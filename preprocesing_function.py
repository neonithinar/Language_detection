# -*- coding: utf-8 -*-
"""Natural Language processing using RNN and CNNs .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fGbUc8owL99BzA-zk6YuzaHodnseVqeW
"""



import pickle
import tensorflow as tf
from tensorflow import keras
import pandas as pd
import numpy as np
from sklearn.feature_extraction.text import CountVectorizer


with open('vectorizer.pkl', 'rb') as f:
    vectorizer_loaded = pickle.load(f)


def preprocess_input(text):
  data = text
  # df_predict = pd.DataFrame(data, columns=["text"])
  # df_predict["text"] = df_predict["text"].str.lower()
  # df_predict["text"] = df_predict['text'].str.replace(r'[^\w\s]+', '')
  data = data.lower()
  data = data.replace(r'[^\w\s]+', '')
  data = [data]

# train count vectorizer using the vocabulary
  # vectorizer = CountVectorizer(analyzer= 'char', ngram_range= (3, 3), vocabulary= vocab)

# create feature matrix for   training set
  # corpus = df_predict['text']
  X = vectorizer_loaded.fit_transform(data)
  feature_names = vectorizer_loaded.get_feature_names()
  predict_features = pd.DataFrame(data = X.toarray(), columns = feature_names)
  return predict_features

predicted_lang = ["arabic", "czech", "danish", "finnish", "lithuanian", "macedonian",
                  "dutch", "polish", "serbian", "swedish"]

# text = "Mogu li da vam (polite) / ti pomognem?" # some  sentence from any of the above language
def predict(text):
    X_pred = preprocess_input(text)

    model_prep = keras.models.load_model("model_1.h5")   #load the model

    var = np.argmax(model_prep.predict(X_pred), axis=-1).item() # store the arry of prediction into a variable
    return predicted_lang[var] # predicted language















